name: Build JAR and Docker image
on:
  workflow_dispatch:
    inputs:
      skipDockerBuild:
        description: 'Skip Docker Image build'
        required: true
        default: false
        type: boolean
      gradle-version:
        description: 'Gradle version'
        required: true
        default: 'wrapper'
        type: string
      java-version:
        description: 'Java version'
        required: true
        default: '21'
        type: string
      project:
        description: 'Project name (also used as JAR name)'
        required: true
        default: 'demo-app'
        type: string
env:
  JAVA_VERSION: ${{ github.event_name == 'workflow_dispatch' && inputs.java-version || '21' }}
  GRADLE_VERSION: ${{ github.event_name == 'workflow_dispatch' && inputs.gradle-version || 'wrapper' }}
  PROJECT: ${{ github.event_name == 'workflow_dispatch' && inputs.project || 'demo-app' }}
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.event_name == 'workflow_dispatch' && inputs.project || 'demo-app' }}
jobs:
  build-jar:
    name: Build JAR from the application
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write     
    
    steps:
      - name: Environment setup
        run:  | 
          echo "Java Version: $JAVA_VERSION"
          echo "Gradle Version: $GRADLE_VERSION"
          echo "Project dir: $PROJECT"
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v2
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'
      - name: Build JAR
        uses: gradle/gradle-build-action@v2
        with:
            gradle-version: ${{ env.GRADLE_VERSION }}
            arguments: bootJar --no-daemon
            build-root-directory: ${{ env.PROJECT }}
      - name: Publish JAR as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.PROJECT }}.jar
          path: ${{ env.PROJECT }}/build/libs/${{ env.PROJECT }}.jar
          if-no-files-found: error
          # retention-days: 5
          
      - name: Docker login
        if: inputs.skipDockerBuild == false
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata for Docker
        if: inputs.skipDockerBuild == false
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Build and push Docker image
        if: inputs.skipDockerBuild == false
        uses: docker/build-push-action@v5
        with:
          context: ${{ env.PROJECT }}
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/demo-app:jar
          labels: ${{ steps.meta.outputs.labels }}
          file: ${{ env.PROJECT }}/jar-build.Dockerfile
