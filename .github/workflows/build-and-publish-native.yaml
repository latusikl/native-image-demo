name: Build Native Image and Docker Image
on:
  workflow_dispatch:
    inputs:
      skipDockerBuild:
          description: 'Skip Docker Image build'
          required: true
          default: false
          type: boolean
      graal-distro:
        description: 'GraalVM distro'
        required: true
        default: 'graalvm-community'
        type: choice
        options:
          - 'graalvm-community'
          - 'graalvm'
      java-version:
        description: 'Java version'
        required: true
        default: '21'
        type: string
      project:
        description: 'Project name (also used as native-image name)'
        required: true
        default: 'demo-app'
        type: string
      gradle-version:
        description: 'Gradle version'
        required: true
        default: 'wrapper'
        type: string
env:
  JAVA_VERSION: ${{ github.event_name == 'workflow_dispatch' && inputs.java-version || '21' }}
  GRAAL_DISTRO: ${{ github.event_name == 'workflow_dispatch' && inputs.graal-distro || 'graalvm-community' }}
  PROJECT: ${{ github.event_name == 'workflow_dispatch' && inputs.project || 'demo-app' }}
  GRADLE_VERSION: ${{ github.event_name == 'workflow_dispatch' && inputs.gradle-version || 'wrapper' }}
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.event_name == 'workflow_dispatch' && inputs.project || 'demo-app' }}
jobs:
  build-native:
    name: Build GraalVM Native Image on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    permissions:
      contents: read
      packages: write     
    strategy: 
      matrix:
        os: [macos-latest, ubuntu-latest]
    steps:
      - name: Environment Setup
        run:  | 
          echo "Java Version: $JAVA_VERSION"
          echo "Gradle Version: $GRAAL_DISTRO"
          echo "Project dir: $PROJECT"
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.GRAAL_DISTRO }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          set-java-home: true
          native-image-job-reports: 'true'
      - name: Build native-image for ${{ matrix.os }}
        uses: gradle/gradle-build-action@v2
        with:
            gradle-version: ${{ env.GRADLE_VERSION }}
            arguments: nativeCompile --no-daemon
            build-root-directory: ${{ env.PROJECT }}
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.PROJECT }}-${{ matrix.os }}
          path: ${{ env.PROJECT }}/build/native/nativeCompile/${{ env.PROJECT }}
          if-no-files-found: error
            
      - name: Docker login
        if: inputs.skipDockerBuild == false && matrix.os == 'ubuntu-latest'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata for Docker
        if: inputs.skipDockerBuild == false && matrix.os == 'ubuntu-latest'
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Build and push Docker image
        if: inputs.skipDockerBuild == false && matrix.os == 'ubuntu-latest'
        uses: docker/build-push-action@v5
        with:
          context: ${{ env.PROJECT }}
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/demo-app:native-image
          labels: ${{ steps.meta.outputs.labels }}
          file: ${{ env.PROJECT }}/native-build.Dockerfile
